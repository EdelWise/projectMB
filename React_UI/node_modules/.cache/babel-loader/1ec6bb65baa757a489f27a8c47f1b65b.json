{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rihar\\\\Desktop\\\\magebit_task\\\\src\\\\components\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { urlRead, urlCreate, urlDelete } from \"../endpoints\";\nimport arrow from \"../images/ic_arrow.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form({\n  checked\n}) {\n  _s();\n\n  const [validationMessage, setValidationMessage] = useState(\"\");\n  const [formData, setFormData] = useState({\n    email: \"\",\n    domain: \"\"\n  });\n\n  function sendData() {\n    axios.post(urlCreate, {\n      firstName: \"Fred\",\n      lastName: \"Flintstone\"\n    }).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n\n    try {\n      const response = axios.post(urlCreate, formData);\n      console.log(response.data);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const emailValidation = e => {\n    let formIsValid = true;\n    let value = document.forms[\"subscription\"][\"email\"].value;\n    let re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (re.test(value) === false) {\n      setValidationMessage(\"Please provide a valid e-mail address\");\n      formIsValid = false;\n    } else if (!checked) {\n      setValidationMessage(\"You must accept the terms and conditions\");\n      formIsValid = false;\n    } else if (!value) {\n      setValidationMessage(\"Email address is required\");\n      formIsValid = false;\n    } else if (value.indexOf(\".co\", value.length - \".co\".length) !== -1) {\n      setValidationMessage(\"We are not accepting subscriptions from Colombia\");\n      formIsValid = false;\n    } else {\n      setValidationMessage(\"\");\n      formIsValid = true;\n    }\n\n    return formIsValid;\n  };\n\n  function extractEmailProvider(email) {\n    const fullDomainName = email.substring(email.lastIndexOf(\"@\") + 1);\n    const provider = fullDomainName.substring(0, fullDomainName.lastIndexOf(\".\"));\n    setFormData(prevState => ({ ...prevState,\n      domain: provider\n    }));\n  }\n\n  function emailSubmit(e) {\n    e.preventDefault();\n\n    if (emailValidation()) {\n      console.log(formData.email);\n      extractEmailProvider(formData.email);\n      sendData();\n      console.log(formData);\n      console.log(\"Form submitted\");\n      return true;\n    } else {\n      console.log(\"Form has errors.\");\n      return false;\n    }\n  }\n\n  function handleInput(e) {\n    return setFormData(prevState => ({ ...prevState,\n      email: e.target.value\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: emailSubmit,\n    name: \"subscription\" // method=\"post\"\n    // action=\"contact.php\"\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: formData.email,\n        onChange: handleInput,\n        name: \"email\",\n        id: \"email\",\n        placeholder: \"Type your email address here\\u2026\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"submit\",\n        id: \"submit\",\n        className: \"btn\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: arrow,\n          alt: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: validationMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"Vdg1ZKeXXM7+peUJ3NDlghYPzV0=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/rihar/Desktop/magebit_task/src/components/Form.jsx"],"names":["React","useState","axios","urlRead","urlCreate","urlDelete","arrow","Form","checked","validationMessage","setValidationMessage","formData","setFormData","email","domain","sendData","post","firstName","lastName","then","response","console","log","catch","error","data","err","emailValidation","e","formIsValid","value","document","forms","re","test","indexOf","length","extractEmailProvider","fullDomainName","substring","lastIndexOf","provider","prevState","emailSubmit","preventDefault","handleInput","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { urlRead, urlCreate, urlDelete } from \"../endpoints\";\r\n\r\nimport arrow from \"../images/ic_arrow.png\";\r\nexport default function Form({ checked }) {\r\n  const [validationMessage, setValidationMessage] = useState(\"\");\r\n  const [formData, setFormData] = useState({ email: \"\", domain: \"\" });\r\n\r\n  function sendData() {\r\n    axios\r\n      .post(urlCreate, {\r\n        firstName: \"Fred\",\r\n        lastName: \"Flintstone\",\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    try {\r\n      const response = axios.post(urlCreate, formData);\r\n      console.log(response.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  const emailValidation = (e) => {\r\n    let formIsValid = true;\r\n    let value = document.forms[\"subscription\"][\"email\"].value;\r\n\r\n    let re =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n    if (re.test(value) === false) {\r\n      setValidationMessage(\"Please provide a valid e-mail address\");\r\n      formIsValid = false;\r\n    } else if (!checked) {\r\n      setValidationMessage(\"You must accept the terms and conditions\");\r\n      formIsValid = false;\r\n    } else if (!value) {\r\n      setValidationMessage(\"Email address is required\");\r\n      formIsValid = false;\r\n    } else if (value.indexOf(\".co\", value.length - \".co\".length) !== -1) {\r\n      setValidationMessage(\"We are not accepting subscriptions from Colombia\");\r\n      formIsValid = false;\r\n    } else {\r\n      setValidationMessage(\"\");\r\n      formIsValid = true;\r\n    }\r\n    return formIsValid;\r\n  };\r\n\r\n  function extractEmailProvider(email) {\r\n    const fullDomainName = email.substring(email.lastIndexOf(\"@\") + 1);\r\n    const provider = fullDomainName.substring(\r\n      0,\r\n      fullDomainName.lastIndexOf(\".\")\r\n    );\r\n\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      domain: provider,\r\n    }));\r\n  }\r\n\r\n  function emailSubmit(e) {\r\n    e.preventDefault();\r\n    if (emailValidation()) {\r\n      console.log(formData.email);\r\n      extractEmailProvider(formData.email);\r\n      sendData();\r\n      console.log(formData);\r\n      console.log(\"Form submitted\");\r\n\r\n      return true;\r\n    } else {\r\n      console.log(\"Form has errors.\");\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function handleInput(e) {\r\n    return setFormData((prevState) => ({\r\n      ...prevState,\r\n      email: e.target.value,\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <form\r\n      onSubmit={emailSubmit}\r\n      name=\"subscription\"\r\n      // method=\"post\"\r\n      // action=\"contact.php\"\r\n    >\r\n      <div className=\"input-group\">\r\n        <input\r\n          value={formData.email}\r\n          onChange={handleInput}\r\n          name=\"email\"\r\n          id=\"email\"\r\n          placeholder=\"Type your email address here…\"\r\n          type=\"text\"\r\n        />\r\n        <button type=\"submit\" name=\"submit\" id=\"submit\" className=\"btn\">\r\n          <img src={arrow} alt=\"submit\" />\r\n        </button>\r\n      </div>\r\n      <p>{validationMessage}</p>\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}