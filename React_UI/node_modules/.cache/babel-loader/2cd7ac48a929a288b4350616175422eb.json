{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rihar\\\\Desktop\\\\magebit_task\\\\src\\\\pages\\\\Contacts.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { urlRead, urlCreate, urlDelete } from \"../endpoints\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Contacts() {\n  _s();\n\n  const [data, setData] = React.useState([]);\n  const [domainButtons, setDomainButtons] = React.useState([]);\n  const [domainFilter, setDomainFilter] = React.useState(\"\");\n\n  async function getData() {\n    try {\n      const response = await axios.get(urlRead);\n      console.log(response);\n      setData(response.data);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async function deleteEntry(index) {\n    try {\n      const response = await axios.post(urlDelete, {\n        id: index\n      });\n      console.log(response);\n    } catch (err) {\n      console.error(err);\n    } finally {\n      getData();\n    }\n  }\n\n  React.useEffect(() => {\n    getData();\n  }, []);\n  React.useEffect(() => {\n    uniqueDomains();\n  }, [data]);\n\n  function sortData(e) {\n    const objs = [...data];\n    const name = e.target.id;\n    console.log(name);\n\n    function compare(a, b) {\n      if (a[name] < b[name]) {\n        return -1;\n      }\n\n      if (a[name] > b[name]) {\n        return 1;\n      }\n\n      return 0;\n    }\n\n    objs.sort(compare);\n    setData(objs);\n  }\n\n  function uniqueDomains() {\n    const unique = [...new Set(data.map(item => item.domain))];\n    setDomainButtons(unique);\n  }\n\n  function handleDomainFilterButton(e) {\n    setDomainFilter(e.target.id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [domainButtons.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDomainFilterButton,\n        id: item,\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setDomainFilter(\"\"),\n      children: \"show all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"search/filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"email\",\n            onClick: sortData,\n            children: [\"email\", /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"email\",\n              onClick: sortData,\n              children: \"sort\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"domain\",\n            onClick: sortData,\n            children: [\"domain\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"domain\",\n              onClick: sortData,\n              children: \"sort\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"date\",\n            onClick: sortData,\n            children: [\"date\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"date\",\n              onClick: sortData,\n              children: \"sort\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.filter(row => {\n          if (domainFilter.length > 0) {\n            return row.domain === domainFilter;\n          } else {\n            return row;\n          }\n        }).map(row => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteEntry(row.id),\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: row.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: row.domain\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: row.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Contacts, \"hzaXgXh9y/+4Dd/IedZBGDMxOIg=\");\n\n_c = Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["C:/Users/rihar/Desktop/magebit_task/src/pages/Contacts.jsx"],"names":["React","axios","urlRead","urlCreate","urlDelete","Contacts","data","setData","useState","domainButtons","setDomainButtons","domainFilter","setDomainFilter","getData","response","get","console","log","err","error","deleteEntry","index","post","id","useEffect","uniqueDomains","sortData","e","objs","name","target","compare","a","b","sort","unique","Set","map","item","domain","handleDomainFilterButton","filter","row","length","email","date"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { urlRead, urlCreate, urlDelete } from \"../endpoints\";\r\n\r\nexport default function Contacts() {\r\n  const [data, setData] = React.useState([]);\r\n  const [domainButtons, setDomainButtons] = React.useState([]);\r\n  const [domainFilter, setDomainFilter] = React.useState(\"\");\r\n\r\n  async function getData() {\r\n    try {\r\n      const response = await axios.get(urlRead);\r\n      console.log(response);\r\n      setData(response.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  async function deleteEntry(index) {\r\n    try {\r\n      const response = await axios.post(urlDelete, { id: index });\r\n      console.log(response);\r\n    } catch (err) {\r\n      console.error(err);\r\n    } finally {\r\n      getData();\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    uniqueDomains();\r\n  }, [data]);\r\n\r\n  function sortData(e) {\r\n    const objs = [...data];\r\n    const name = e.target.id;\r\n    console.log(name);\r\n\r\n    function compare(a, b) {\r\n      if (a[name] < b[name]) {\r\n        return -1;\r\n      }\r\n      if (a[name] > b[name]) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    }\r\n\r\n    objs.sort(compare);\r\n    setData(objs);\r\n  }\r\n\r\n  function uniqueDomains() {\r\n    const unique = [...new Set(data.map((item) => item.domain))];\r\n    setDomainButtons(unique);\r\n  }\r\n\r\n  function handleDomainFilterButton(e) {\r\n    setDomainFilter(e.target.id);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {domainButtons.map((item, index) => {\r\n        return (\r\n          <button onClick={handleDomainFilterButton} key={index} id={item}>\r\n            {item}\r\n          </button>\r\n        );\r\n      })}\r\n      <button onClick={() => setDomainFilter(\"\")}>show all</button>\r\n      <input placeholder=\"search/filter\" />\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th></th>\r\n            <th id=\"email\" onClick={sortData}>\r\n              email\r\n              <button id=\"email\" onClick={sortData}>\r\n                sort\r\n              </button>\r\n            </th>\r\n            <th id=\"domain\" onClick={sortData}>\r\n              domain{\" \"}\r\n              <button id=\"domain\" onClick={sortData}>\r\n                sort\r\n              </button>\r\n            </th>\r\n            <th id=\"date\" onClick={sortData}>\r\n              date{\" \"}\r\n              <button id=\"date\" onClick={sortData}>\r\n                sort\r\n              </button>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data\r\n            .filter((row) => {\r\n              if (domainFilter.length > 0) {\r\n                return row.domain === domainFilter;\r\n              } else {\r\n                return row;\r\n              }\r\n            })\r\n            .map((row) => {\r\n              return (\r\n                <tr key={row.id}>\r\n                  <th>\r\n                    <button onClick={() => deleteEntry(row.id)}>delete</button>\r\n                  </th>\r\n                  <th>{row.email}</th>\r\n                  <th>{row.domain}</th>\r\n                  <th>{row.date}</th>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n        <tfoot>\r\n          <tr></tr>\r\n        </tfoot>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}