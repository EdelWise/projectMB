{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rihar\\\\Desktop\\\\magebit_task\\\\src\\\\components\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { urlRead, urlCreate, urlDelete } from \"../endpoints\";\nimport arrow from \"../images/ic_arrow.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form({\n  checked\n}) {\n  _s();\n\n  const [validationMessage, setValidationMessage] = useState(\"\");\n  const [formData, setFormData] = useState({\n    email: \"\",\n    domain: \"\"\n  });\n\n  const emailValidation = e => {\n    let formIsValid = true;\n    let value = document.forms[\"subscription\"][\"email\"].value;\n    let re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (re.test(value) === false) {\n      setValidationMessage(\"Please provide a valid e-mail address\");\n      formIsValid = false;\n    } else if (!checked) {\n      setValidationMessage(\"You must accept the terms and conditions\");\n      formIsValid = false;\n    } else if (!value) {\n      setValidationMessage(\"Email address is required\");\n      formIsValid = false;\n    } else if (value.indexOf(\".co\", value.length - \".co\".length) !== -1) {\n      setValidationMessage(\"We are not accepting subscriptions from Colombia\");\n      formIsValid = false;\n    } else {\n      setValidationMessage(\"\");\n      formIsValid = true;\n    }\n\n    return formIsValid;\n  };\n\n  const emailSubmit = e => {\n    e.preventDefault();\n\n    if (emailValidation()) {\n      console.log(\"Form submitted\");\n      return true;\n    } else {\n      console.log(\"Form has errors.\");\n      return false;\n    }\n  };\n\n  const handleInput = e => console.log(formData);\n\n  setFormData(prevState => ({ ...prevState,\n    email: e.target.value\n  }));\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: emailSubmit,\n    name: \"subscription\" // method=\"post\"\n    // action=\"contact.php\"\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: formData.email,\n        onChange: handleInput,\n        name: \"email\",\n        id: \"email\",\n        placeholder: \"Type your email address here\\u2026\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"submit\",\n        id: \"submit\",\n        className: \"btn\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: arrow,\n          alt: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: validationMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"Vdg1ZKeXXM7+peUJ3NDlghYPzV0=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/rihar/Desktop/magebit_task/src/components/Form.jsx"],"names":["React","useState","axios","urlRead","urlCreate","urlDelete","arrow","Form","checked","validationMessage","setValidationMessage","formData","setFormData","email","domain","emailValidation","e","formIsValid","value","document","forms","re","test","indexOf","length","emailSubmit","preventDefault","console","log","handleInput","prevState","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { urlRead, urlCreate, urlDelete } from \"../endpoints\";\r\n\r\nimport arrow from \"../images/ic_arrow.png\";\r\nexport default function Form({ checked }) {\r\n  const [validationMessage, setValidationMessage] = useState(\"\");\r\n  const [formData, setFormData] = useState({ email: \"\", domain: \"\" });\r\n\r\n  const emailValidation = (e) => {\r\n    let formIsValid = true;\r\n    let value = document.forms[\"subscription\"][\"email\"].value;\r\n\r\n    let re =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n    if (re.test(value) === false) {\r\n      setValidationMessage(\"Please provide a valid e-mail address\");\r\n      formIsValid = false;\r\n    } else if (!checked) {\r\n      setValidationMessage(\"You must accept the terms and conditions\");\r\n      formIsValid = false;\r\n    } else if (!value) {\r\n      setValidationMessage(\"Email address is required\");\r\n      formIsValid = false;\r\n    } else if (value.indexOf(\".co\", value.length - \".co\".length) !== -1) {\r\n      setValidationMessage(\"We are not accepting subscriptions from Colombia\");\r\n      formIsValid = false;\r\n    } else {\r\n      setValidationMessage(\"\");\r\n      formIsValid = true;\r\n    }\r\n    return formIsValid;\r\n  };\r\n\r\n  const emailSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (emailValidation()) {\r\n      console.log(\"Form submitted\");\r\n\r\n      return true;\r\n    } else {\r\n      console.log(\"Form has errors.\");\r\n\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleInput = (e) => console.log(formData);\r\n  setFormData((prevState) => ({\r\n    ...prevState,\r\n    email: e.target.value,\r\n  }));\r\n  return (\r\n    <form\r\n      onSubmit={emailSubmit}\r\n      name=\"subscription\"\r\n      // method=\"post\"\r\n      // action=\"contact.php\"\r\n    >\r\n      <div className=\"input-group\">\r\n        <input\r\n          value={formData.email}\r\n          onChange={handleInput}\r\n          name=\"email\"\r\n          id=\"email\"\r\n          placeholder=\"Type your email address hereâ€¦\"\r\n          type=\"text\"\r\n        />\r\n        <button type=\"submit\" name=\"submit\" id=\"submit\" className=\"btn\">\r\n          <img src={arrow} alt=\"submit\" />\r\n        </button>\r\n      </div>\r\n      <p>{validationMessage}</p>\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}