{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rihar\\\\Desktop\\\\magebit_task\\\\src\\\\pages\\\\Contacts.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { urlRead, urlCreate, urlDelete } from \"../endpoints\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Contacts() {\n  _s();\n\n  const [data, setData] = React.useState([]);\n\n  async function getData() {\n    try {\n      const response = await axios.get(urlRead);\n      console.log(response);\n      setData(response.data);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  React.useEffect(() => {\n    getData();\n  }, []);\n\n  const sortData = e => {\n    const objs = [...data];\n    const name = e.target.name;\n    console.log(name);\n\n    function compare(a, b) {\n      if (a[name] < b[name]) {\n        return -1;\n      }\n\n      if (a[name] > b[name]) {\n        return 1;\n      }\n\n      return 0;\n    }\n\n    objs.sort(compare);\n    setData(objs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sortData,\n      children: \"TEST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            name: \"email\",\n            onClick: sortData,\n            children: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            name: \"domain\",\n            onClick: sortData,\n            children: \"domain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            name: \"date\",\n            onClick: sortData,\n            children: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(row => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: row.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: row.domain\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: row.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Contacts, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["C:/Users/rihar/Desktop/magebit_task/src/pages/Contacts.jsx"],"names":["React","axios","urlRead","urlCreate","urlDelete","Contacts","data","setData","useState","getData","response","get","console","log","err","error","useEffect","sortData","e","objs","name","target","compare","a","b","sort","map","row","email","domain","date"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,SAA7B,QAA8C,cAA9C;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAxB;;AAEA,iBAAeC,OAAf,GAAyB;AACvB,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUT,OAAV,CAAvB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAH,MAAAA,OAAO,CAACG,QAAQ,CAACJ,IAAV,CAAP;AACD,KAJD,CAIE,OAAOQ,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACG,KAAR,CAAcD,GAAd;AACD;AACF;;AAEDd,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACpBP,IAAAA,OAAO;AACR,GAFD,EAEG,EAFH;;AAIA,QAAMQ,QAAQ,GAAIC,CAAD,IAAO;AACtB,UAAMC,IAAI,GAAG,CAAC,GAAGb,IAAJ,CAAb;AACA,UAAMc,IAAI,GAAGF,CAAC,CAACG,MAAF,CAASD,IAAtB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;;AAEA,aAASE,OAAT,CAAiBC,CAAjB,EAAoBC,CAApB,EAAuB;AACrB,UAAID,CAAC,CAACH,IAAD,CAAD,GAAUI,CAAC,CAACJ,IAAD,CAAf,EAAuB;AACrB,eAAO,CAAC,CAAR;AACD;;AACD,UAAIG,CAAC,CAACH,IAAD,CAAD,GAAUI,CAAC,CAACJ,IAAD,CAAf,EAAuB;AACrB,eAAO,CAAP;AACD;;AACD,aAAO,CAAP;AACD;;AAEDD,IAAAA,IAAI,CAACM,IAAL,CAAUH,OAAV;AACAf,IAAAA,OAAO,CAACY,IAAD,CAAP;AACD,GAjBD;;AAmBA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEF,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAI,YAAA,IAAI,EAAC,OAAT;AAAiB,YAAA,OAAO,EAAEA,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAI,YAAA,IAAI,EAAC,QAAT;AAAkB,YAAA,OAAO,EAAEA,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE;AAAI,YAAA,IAAI,EAAC,MAAT;AAAgB,YAAA,OAAO,EAAEA,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAA,kBACGX,IAAI,CAACoB,GAAL,CAAUC,GAAD,IAAS;AACjB,8BACE;AAAA,oCACE;AAAA,wBAAKA,GAAG,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKD,GAAG,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,wBAAKF,GAAG,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD,SARA;AADH;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAnEuBzB,Q;;KAAAA,Q","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { urlRead, urlCreate, urlDelete } from \"../endpoints\";\r\n\r\nexport default function Contacts() {\r\n  const [data, setData] = React.useState([]);\r\n\r\n  async function getData() {\r\n    try {\r\n      const response = await axios.get(urlRead);\r\n      console.log(response);\r\n      setData(response.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const sortData = (e) => {\r\n    const objs = [...data];\r\n    const name = e.target.name;\r\n    console.log(name);\r\n\r\n    function compare(a, b) {\r\n      if (a[name] < b[name]) {\r\n        return -1;\r\n      }\r\n      if (a[name] > b[name]) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    }\r\n\r\n    objs.sort(compare);\r\n    setData(objs);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={sortData}>TEST</button>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th name=\"email\" onClick={sortData}>\r\n              email\r\n            </th>\r\n            <th name=\"domain\" onClick={sortData}>\r\n              domain\r\n            </th>\r\n            <th name=\"date\" onClick={sortData}>\r\n              date\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row) => {\r\n            return (\r\n              <tr>\r\n                <th>{row.email}</th>\r\n                <th>{row.domain}</th>\r\n                <th>{row.date}</th>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}